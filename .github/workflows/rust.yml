name: Rust

on: [push, pull_request]

jobs:

  rustfmt-clippy:

    name: Format and Clippy

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy, rustfmt

      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all -- -D warnings --verbose


  Ubuntu-Nightly:

    name: Ubuntu-Nightly

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install grcov
        env:
          LINK: https://github.com/mozilla/grcov/releases/download
          GRCOV_VERSION: 0.8.0
        run: |
          curl -L "$LINK/v$GRCOV_VERSION/grcov-linux-x86_64.tar.bz2" |
          tar xj -C $HOME/.cargo/bin
          # cargo install grcov

      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: llvm-tools-preview, rustfmt

      - name: Run cargo clean
        run: |
          cargo clean

      - name: Run tests
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: >
            -Zinstrument-coverage
          RUSTDOCFLAGS: >
            -Zinstrument-coverage
          LLVM_PROFILE_FILE: >
            cargo-c-%p-%m.profraw
        run: |
          echo $RUSTFLAGS $LLVM_PROFILE_FILE
          cargo build
          cargo test --no-fail-fast --verbose
          ls -l

      - name: Run binaries
        env:
          LLVM_PROFILE_FILE: >
            cargo-c-%p-%m.profraw
        run: |
          # cargo clean --manifest-path=example-project/Cargo.toml
          # target/debug/cargo-capi capi test --manifest-path=example-project/Cargo.toml
          target/debug/cargo-cinstall cinstall --manifest-path=example-project/Cargo.toml --destdir=/tmp/install

      - name: Run grcov
        id: coverage
        run: |
          grcov . --binary-path target/debug/deps/ -s . -t lcov --branch --ignore-not-existing --ignore '../**' --ignore '/*' -o coverage.lcov
          wc -l coverage.lcov

      - name: Codecov upload
        uses: codecov/codecov-action@v1
        with:
          files: coverage.lcov

  Ubuntu-Stable:

    name: Ubuntu-Stable

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

  msvc-Nightly:

    name: msvc-Nightly

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast

  msvc-Stable:

    name: msvc-Stable

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

  mingw-Nightly:

    name: mingw-Nightly

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install nightly-gnu
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-gnu
          override: true

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast

  mingw-Stable:

    name: mingw-Stable

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install stable-gnu
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable-gnu
          override: true

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast
