name: Build example project

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:

  example-project:

    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: windows-latest
            toolchain-suffix: -gnu
          - os: windows-latest
            toolchain-suffix: -msvc
          - os: ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable${{ matrix.toolchain-suffix }}
          override: true

      - name: Install cargo-c applet
        run: |
          cargo install --path .

      - name: Set MSVC binaries path
        if: matrix.toolchain-suffix == '-msvc'
        run: |
          $BinGlob = "VC\Tools\MSVC\*\bin\Hostx64\x64"
          $env:PATH = "$env:PATH;${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer"
          $BinPath = vswhere -latest -products * -find "$BinGlob" | Select-Object -Last 1
          echo "$BinPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build example project
        working-directory: example-project
        run: |
          cargo cbuild --verbose --release

      - name: Install into temporary location
        working-directory: example-project
        run: |
          cargo cinstall --verbose --release --destdir=temp

      - name: Copy installed files to /usr/local
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        working-directory: example-project
        run: |
          sudo cp -r temp/usr/local/* /usr/local/
